---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-controller-manager
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-sources-kafka-controller
  labels:
    kafka.eventing.knative.dev/release: devel
rules:
- apiGroups:
  - sources.knative.dev
  resources:
  - kafkasources
  - kafkasources/finalizers
  verbs: &everything
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - sources.knative.dev
  resources:
  - kafkasources/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - bindings.knative.dev
  resources:
  - kafkabindings
  - kafkabindings/finalizers
  verbs: &everything
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - bindings.knative.dev
  resources:
  - kafkabindings/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: *everything
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - events
  - configmaps
  - secrets
  verbs: *everything
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - create
  - update
  - list
  - watch
  - patch
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs: *everything
- apiGroups:
  - "admissionregistration.k8s.io"
  resources:
  - "mutatingwebhookconfigurations"
  - "validatingwebhookconfigurations"
  verbs: &everything
  - "get"
  - "list"
  - "create"
  - "update"
  - "delete"
  - "patch"
  - "watch"
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  verbs:
  - "get"
  - "list"
  - "create"
  - "update"
  - "delete"
  - "patch"
  - "watch"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eventing-kafka-source-observer
  labels:
    kafka.eventing.knative.dev/release: devel
    duck.knative.dev/source: "true"
rules:
- apiGroups:
  - "sources.knative.dev"
  resources:
  - "kafkasources"
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-sources-kafka-controller
  labels:
    kafka.eventing.knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: kafka-controller-manager
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eventing-sources-kafka-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-sources-kafka-controller-addressable-resolver
  labels:
    kafka.eventing.knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: kafka-controller-manager
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addressable-resolver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-sources-kafka-controller-podspecable-binding
  labels:
    kafka.eventing.knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: kafka-controller-manager
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: podspecable-binding
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    kafka.eventing.knative.dev/release: devel
    duck.knative.dev/binding: "true"
    knative.dev/crd-install: "true"
  name: kafkabindings.bindings.knative.dev
spec:
  group: bindings.knative.dev
  versions:
    - name: v1beta1
      served: true
      storage: true
      subresources:
        status: { }
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
        - name: BootstrapServers
          type: string
          jsonPath: ".spec.bootstrapServers"
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  names:
    categories:
      - all
      - knative
      - eventing
      - bindings
    kind: KafkaBinding
    plural: kafkabindings
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: [ "v1", "v1beta1" ]
      clientConfig:
        service:
          name: kafka-source-webhook
          namespace: knative-eventing
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    kafka.eventing.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.kafka.event" }
      ]
  name: kafkasources.sources.knative.dev
spec:
  group: sources.knative.dev
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      subresources:
        status: { }
        scale:
          specReplicasPath: .spec.consumers
          statusReplicasPath: .status.consumers
          labelSelectorPath: .status.selector
      additionalPrinterColumns:
        - name: Topics
          type: string
          jsonPath: ".spec.topics"
        - name: BootstrapServers
          type: string
          jsonPath: ".spec.bootstrapServers"
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Ready\")].reason"
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: KafkaSource
    plural: kafkasources
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: [ "v1", "v1beta1" ]
      clientConfig:
        service:
          name: kafka-source-webhook
          namespace: knative-eventing
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-controller
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
    control-plane: kafka-controller-manager
spec:
  selector:
    control-plane: kafka-controller-manager
  ports:
  - name: https-kafka
    port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-controller-manager
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
    control-plane: kafka-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      control-plane: kafka-controller-manager
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: kafka-controller-manager
      containers:
      - name: manager
        image: registry.ci.openshift.org/openshift/knative-nightly:knative-eventing-kafka-source-controller
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: METRICS_DOMAIN
          value: knative.dev/sources
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: KAFKA_RA_IMAGE
          value: registry.ci.openshift.org/openshift/knative-nightly:knative-eventing-kafka-receive-adapter
        volumeMounts:
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
        readinessProbe: &probe
          periodSeconds: 1
          httpGet:
            scheme: HTTPS
            port: 8443
            httpHeaders:
            - name: k-kubelet-probe
              value: "webhook"
        livenessProbe:
          <<: *probe
          initialDelaySeconds: 20
      serviceAccount: kafka-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: webhook
    kafka.eventing.knative.dev/release: devel
  name: kafka-source-webhook
  namespace: knative-eventing
spec:
  ports:
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    control-plane: kafka-controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulting.webhook.kafka.sources.knative.dev
  labels:
    kafka.eventing.knative.dev/release: devel
webhooks:
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: kafka-source-webhook
      namespace: knative-eventing
  sideEffects: None
  failurePolicy: Fail
  name: defaulting.webhook.kafka.sources.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kafkabindings.webhook.kafka.sources.knative.dev
  labels:
    kafka.eventing.knative.dev/release: devel
webhooks:
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: kafka-source-webhook
      namespace: knative-eventing
  sideEffects: None
  failurePolicy: Fail
  name: kafkabindings.webhook.kafka.sources.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.kafka.sources.knative.dev
  labels:
    kafka.eventing.knative.dev/release: devel
webhooks:
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: kafka-source-webhook
      namespace: knative-eventing
  sideEffects: None
  failurePolicy: Fail
  name: validation.webhook.kafka.sources.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: config.webhook.kafka.sources.knative.dev
  labels:
    kafka.eventing.knative.dev/release: devel
webhooks:
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: kafka-source-webhook
      namespace: knative-eventing
  sideEffects: None
  failurePolicy: Fail
  name: config.webhook.kafka.sources.knative.dev
  namespaceSelector:
    matchExpressions:
    - key: kafka.eventing.knative.dev/release
      operator: Exists
---
apiVersion: v1
kind: Secret
metadata:
  name: kafka-source-webhook-certs
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
